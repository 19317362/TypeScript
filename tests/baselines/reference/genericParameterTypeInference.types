=== tests/cases/compiler/genericParameterTypeInference.ts ===
function find<T>(hay: T[], test: (s: T) => boolean ) { return 0; }
>find : <T>(hay: T[], test: (s: T) => boolean) => number
>T : T
>hay : T[]
>T : T
>test : (s: T) => boolean
>s : T
>T : T

function stringIsEmpty(s: string) { return false; }
>stringIsEmpty : (s: string) => boolean
>s : string

find([1, 2, 3], stringIsEmpty);
>find([1, 2, 3], stringIsEmpty) : number
>find : <T>(hay: T[], test: (s: T) => boolean) => number
>[1, 2, 3] : {}[]
>stringIsEmpty : (s: string) => boolean


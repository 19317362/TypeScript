=== tests/cases/compiler/noSecondaryInference.ts ===
function isTruthy(s: any) {
>isTruthy : (s: any) => boolean
>s : any

    return !!s;
>!!s : boolean
>!s : boolean
>s : any
}

function filter<T>(a: T[], predicate: (e: T) => boolean) {
>filter : <T>(a: T[], predicate: (e: T) => boolean) => T[]
>T : T
>a : T[]
>T : T
>predicate : (e: T) => boolean
>e : T
>T : T

    return a.filter(predicate);
>a.filter(predicate) : T[]
>a.filter : (callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => T[]
>a : T[]
>filter : (callbackfn: (value: T, index: number, array: T[]) => boolean, thisArg?: any) => T[]
>predicate : (e: T) => boolean
}

var x = [1, 2, 3];
>x : number[]
>[1, 2, 3] : number[]

var j: string[] = filter(x, isTruthy);
>j : string[]
>filter(x, isTruthy) : any[]
>filter : <T>(a: T[], predicate: (e: T) => boolean) => T[]
>x : number[]
>isTruthy : (s: any) => boolean

